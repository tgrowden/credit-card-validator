import { expect, describe, it } from "vitest";
import { faker } from "@faker-js/faker";

import isValidLuhnCreditCard from "./isValidLuhnCreditCard";
import {
  MIN_VALID_CREDIT_CARD_LENGTH,
  MAX_VALID_CREDIT_CARD_LENGTH
} from "./isValidCreditCardLength";

/**
 * A known valid credit card number
 *
 * Generated by Faker
 */
const KNOWN_VALID_CREDIT_CARD_NUM = "4417 1234 5678 9113";

describe("isValidLuhnCreditCard", () => {
  it("Should return false if the input is not a string", () => {
    // @ts-expect-error
    expect(isValidLuhnCreditCard(123)).toBe(false);

    // @ts-expect-error
    expect(isValidLuhnCreditCard({})).toBe(false);

    // @ts-expect-error
    expect(isValidLuhnCreditCard([])).toBe(false);

    // @ts-expect-error
    expect(isValidLuhnCreditCard(null)).toBe(false);

    // @ts-expect-error
    expect(isValidLuhnCreditCard(undefined)).toBe(false);
  });

  it("Should return false when the input is less than the length of a valid credit card number", () => {
    expect(
      isValidLuhnCreditCard(
        faker.string.numeric({
          length: {
            min: 1,
            max: MIN_VALID_CREDIT_CARD_LENGTH - 1
          }
        })
      )
    ).toBe(false);
  });

  it("Should return false when the input is greater than the length of a valid credit card number", () => {
    expect(
      isValidLuhnCreditCard(
        faker.string.numeric({
          length: {
            min: MAX_VALID_CREDIT_CARD_LENGTH + 1,
            max: MAX_VALID_CREDIT_CARD_LENGTH + 10
          }
        })
      )
    ).toBe(false);
  });

  it("Should return true if the input is valid, regardless of characters used to break up the input", () => {
    expect(isValidLuhnCreditCard(KNOWN_VALID_CREDIT_CARD_NUM)).toBe(true);

    expect(
      isValidLuhnCreditCard(KNOWN_VALID_CREDIT_CARD_NUM.replace(/\s/g, "-"))
    ).toBe(true);

    expect(
      isValidLuhnCreditCard(KNOWN_VALID_CREDIT_CARD_NUM.replace(/\s/g, ""))
    ).toBe(true);
  });

  it("Should return true for a valid credit card number string", () => {
    expect(isValidLuhnCreditCard(KNOWN_VALID_CREDIT_CARD_NUM)).toBe(true);

    expect(
      isValidLuhnCreditCard(faker.finance.creditCardNumber({ issuer: "visa" }))
    ).toBe(true);

    expect(
      isValidLuhnCreditCard(
        // another known valid card number generated by Faker
        "8859395217555290"
      )
    ).toBe(true);
  });
});
